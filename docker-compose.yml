# Overview
# build env to pull data and visualize it

version: '3.7'

name: ${PROJECT_NAME}  # project name (aka stack)

services:

  # db
  db:
    image: postgres:16.1
    container_name: ${PROJECT_ABBREV}-db

    restart: always

    ports:
      - "${DB_PORT}:${POSTGRES_PORT}"
    
    env_file:
      - .env
    
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d/

    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 10s
      timeout: 3s
      retries: 3

    networks:
      - ffd

  # dbt
  dbt:
    # image: ghcr.io/dbt-labs/dbt-postgres:latest
    build:
      context: ./dbt
      
    container_name: ${PROJECT_ABBREV}-dbt

    volumes:
      - ./dbt/app:/usr/app
      - ./dbt/profiles.yml:/root/.dbt/profiles.yml
      # - ./dbt/cron/extract_and_load:/home/update/extract_and_load

    env_file:
      - .env

    depends_on:
      db:
        condition: service_healthy

    networks:
      - ffd

  # app
  app:
    build:
      context: ./app
      
    container_name: ${PROJECT_ABBREV}-app

    # volumes:
    #   - ./app/app:/usr/app

    env_file:
      - .env

    ports:
      - "${APP_PORT}:80"

    depends_on:
      db:
        condition: service_healthy

    networks:
      - ffd

  # jupyterlab
  lab:
    build: ./lab
    container_name: ${PROJECT_ABBREV}-lab

    restart: unless-stopped

    ports:
      - ${LAB_PORT}:8888

    env_file:
      - .env

    volumes:
      - type: bind
        source: ./lab/working
        target: /usr/app
      # you could pass the whole config if you want
      # e.g., manually set hashed password
      # - type: bind
      #   source: ./lab/config/jupyter_notebook_config.py
      #   target: /root/.jupyter/jupyter_notebook_config.py
    
    depends_on:
      db:
        condition: service_healthy

    networks:
      - ffd

networks:
  ffd: